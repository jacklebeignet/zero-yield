name: Build Commands and Create Release

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  inject-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download version and check if release exists
        id: check_release
        run: |
          # Get version from upstream
          curl -s https://raw.githubusercontent.com/EdgeIY/infiniteyield/refs/heads/master/version -o version.json
          VERSION=$(jq -r '.Version' version.json)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

          # Check if the release already exists
          if gh release view "$VERSION" &> /dev/null; then
            echo "Release $VERSION already exists. Skipping workflow."
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Exit if release already exists
        if: steps.check_release.outputs.skip == 'true'
        run: echo "Release already exists. Exiting early."

      - name: Download source.lua and preinjected commands
        if: steps.check_release.outputs.skip == 'false'
        run: |
          curl -s https://raw.githubusercontent.com/EdgeIY/infiniteyield/refs/heads/master/source -o src/source.lua
          curl -s https://raw.githubusercontent.com/jacklebeignet/zero-yield/refs/heads/main/preinjected.lua -o preinjected.lua

      - name: Modify and inject
        if: steps.check_release.outputs.skip == 'false'
        run: |
          VERSION=${{ steps.check_release.outputs.version }}

          # Replace "Infinite" with "Zero"
          sed -i 's/Infinite/Zero/g' src/source.lua

          # Replace internal version assignment
          sed -i "s/Version[:=] *['\"]\\?[0-9.]*['\"]\\?/Version = \"$VERSION\"/g" src/source.lua

          # Prepend version comment
          sed -i "1i-- Version: $VERSION" src/source.lua

          # Append injected commands
          cat preinjected.lua >> src/source.lua

          # Write minified version to build.lua with warning comment
          {
            echo "-- This file is generated automatically and is not meant to be modified."
            sed '1d' src/source.lua | tr -d '\n\t\r' | sed 's/  */ /g' src/source.lua
          } > src/build.lua

      - name: Commit updated src files to repo
        if: steps.check_release.outputs.skip == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add src/source.lua src/build.lua
          git commit -m "Updated Zero Yield to v${{ steps.check_release.outputs.version }}"
          git push

      - name: Create GitHub release and clean up
        if: steps.check_release.outputs.skip == 'false'
        run: |
          VERSION=${{ steps.check_release.outputs.version }}
          echo -e "## Whatâ€™s New\n\n- Updated Zero Yield to version $VERSION" > notes.md
          gh release create "$VERSION" src/source.lua src/build.lua --title "$VERSION" --notes-file notes.md
          rm notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
