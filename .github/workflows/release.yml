name: Inject Commands and Create Release

on:
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  inject-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download source.lua and version
        run: |
          curl -s https://raw.githubusercontent.com/EdgeIY/infiniteyield/refs/heads/master/source -o source.lua
          curl -s https://raw.githubusercontent.com/EdgeIY/infiniteyield/refs/heads/master/version -o version.json

      - name: Parse version
        id: get_version
        run: |
          VERSION=$(jq -r '.Version' version.json)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Download preinjected commands
        run: |
          curl -s https://raw.githubusercontent.com/${{ github.repository }}/main/preinjected.lua -o preinjected.lua

      - name: Modify and inject
        run: |
          VERSION=${{ steps.get_version.outputs.version }}

          # Replace all "Infinite" with "Zero"
          sed -i 's/Infinite/Zero/g' source.lua

          # Replace any internal version assignment
          sed -i "s/Version[:=] *['\"]\\?[0-9.]*['\"]\\?/Version = \"$VERSION\"/g" source.lua

          # Prepend version comment
          sed -i "1i-- Version: $VERSION" source.lua

          # Append injected commands
          cat preinjected.lua >> source.lua

      - name: Commit updated source.lua to repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add source.lua
          git commit -m "Updated source.lua to Zero Yield v${{ steps.get_version.outputs.version }}"
          git push

      - name: Create GitHub release
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          NOTES="## Whatâ€™s New\n- Updated Zero Yield to version $VERSION"
          gh release create "$VERSION" source.lua --title "$VERSION" --notes "$NOTES"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
